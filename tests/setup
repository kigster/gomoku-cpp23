#!/usr/bin/env bash
# Basic setup for C/C++ dev environment
# 
# This replaces annoying git modules or some other methods of importing a project
# into a source tree.
# 
# If this repo were to change frequently, then perhaps this wouldn't be the best
# solution.

set -e

os="$(uname -s | tr 'A-Z' 'a-z')"

if [[ $os == darwin ]]; then
  command -v clang >/dev/null || sudo xcode-select --install
  command -v gcc >/dev/null || brew install gcc
  command -v cmake >/dev/null || brew install cmake
elif [[ $os == linux ]]; then
  command -v gcc || {
    sudo apt-get update -yqq
    sudo apt-get install build-essential -yqq
  }
fi

command -v cmake >/dev/null || {
  echo "Can't seem to find cmake even after an attempted install."
  echo "Please install it and retry."
  exit 1
}

[[ -d tests/googletest && -f tests/googletest/CMakeLists.txt ]] || {
  echo 'Something is missing in GoogleTest, updating...'
  rm -rf tests/googletest
  git clone https://github.com/google/googletest.git tests/googletest
}

cd tests/googletest
echo "Building GoogleTest..."
mkdir -p build
cd build
echo "Configuring and building GoogleTest..."

# Use the same compiler and C++ standard as the main project
if command -v g++-15 >/dev/null 2>&1; then
    echo "Using GCC-15 for GoogleTest build..."
    export CC=gcc-15
    export CXX=g++-15
    cmake -DCMAKE_CXX_STANDARD=23 -DCMAKE_CXX_COMPILER=g++-15 -DCMAKE_C_COMPILER=gcc-15 ..
else
    echo "Using system compiler for GoogleTest build..."
    cmake -DCMAKE_CXX_STANDARD=23 ..
fi

make -j 4
echo "———————————————————————————————————————————————————————————"
echo -e "\033[1;32mGoogleTest setup complete!\033[0m"
echo
echo -e "You can now build the project using:"
echo
echo -e "  \033[0;33mmake help            \033[1;30m# See what options exist from Makefile\033[0m"
echo
